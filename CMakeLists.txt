cmake_minimum_required(VERSION 3.20)
set(PROJECT rootbeer)
set(ROOT_PROJECT ${PROJECT})
project(${PROJECT})

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

include(cmake/luajit.cmake)

set(SOURCES
    "src/main.c"
    "src/config/load.c"
    "src/config/module.c"
    "src/config/functions/debug_test.c"

    "src/cli/parse.c"
    "src/cli/commands.c"
    "src/cli/commands/compose.c"
    "src/cli/commands/store.c"

    "src/store/create.c"
    "src/store/current.c"
    "src/store/manage.c"
    "src/store/read.c"
    "src/store/view.c"
)

add_executable(${PROJECT}
    ${SOURCES}
)

target_include_directories(${PROJECT} PUBLIC
    "include/"
    "${LUAJIT_INCLUDE_DIRS}"
)

# required for linking with built externals
target_link_directories(${PROJECT} PUBLIC
     "${CMAKE_BINARY_DIR}"
     "${CMAKE_BINARY_DIR}/lib"
)

target_link_libraries(${PROJECT} PUBLIC
    "${LUAJIT_LIBRARIES}"
    rootbeer-plugins
)

add_dependencies(${PROJECT} luajit-external)

add_subdirectory(plugins)

# set(REGISTER "")
# set(PLUGIN_INCLUDES "") # evil!!!
# set(PLUGIN_PATH "include/plugins.h")
# cmake_path(ABSOLUTE_PATH PLUGIN_PATH)

#macro(link_plugin library directory)
#	if(ROOT_PROJECT)
#		target_link_libraries(${ROOT_PROJECT} PUBLIC ${library})
#		target_include_directories(${ROOT_PROJECT} PUBLIC ${directory})
#	endif()
#endmacro()

#macro(register_function lua_name c_name include_file) # a macro and not a function to pass through variables
#	set(REGISTER "${REGISTER} {\"${lua_name}\", ${c_name}},") # for when there is more than one fn
#	set(REGISTER ${REGISTER} PARENT_SCOPE)
#	set(PLUGIN_INCLUDES "${PLUGIN_INCLUDES}\
##include <${include_file}>" PARENT_SCOPE) # evil? 
#endmacro()

#set(EXAMPLE_PLUGIN ON)
#if(EXAMPLE_PLUGIN)
#    message(STATUS "HEY PLUGIN IS ON!!!")
#	add_subdirectory("plugins/example_plugin")
#endif()
#add_definitions("-DREGISTER=${REGISTER}")

#file(WRITE ${PLUGIN_PATH} "/*\n\
# * EDITING THIS FILE DIRECTLY WON'T DO ANYTHING\n\
# *\n\
# * This file is autogenerated by CMake depending on the provided plugins\n\
# * See the main CMakeLists.txt file and, specifically, the PLUGIN_INCLUDES\n\
# * variable and it's uses for more information\n\
# */\n\
#\n\
#${PLUGIN_INCLUDES}")

